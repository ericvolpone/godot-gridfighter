{
	"categories": [
		{
			"uuid": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"title": "Task",
			"color": "70bafa"
		},
		{
			"uuid": "a93a7556-34b9-415c-ae6c-6f87b8475858",
			"title": "Idea",
			"color": "b69e13"
		},
		{
			"uuid": "f6c1f10a-5ce7-4705-bcbc-58790d54da57",
			"title": "Bug",
			"color": "e0450c"
		},
		{
			"uuid": "b0d0913a-18f9-4ac3-887f-603e53a50c00",
			"title": "Optimizations",
			"color": "16db3e"
		}
	],
	"stages": [
		{
			"uuid": "63c1f58a-5e38-4a72-98d8-44ab4fae8431",
			"title": "Todo",
			"tasks": [
				"727a2d99-e87f-4939-9105-44fe844ef725",
				"cc873263-3ab1-4f9c-bdf6-15ce6a4b33f9",
				"2e1a6c7f-0abc-4061-93a0-3fd7c2c498ed",
				"c97abd51-cf6d-48f5-8a32-8501546227cf",
				"9704bd39-80af-44c1-8d66-5f5b5c56d103",
				"70036384-bc35-4b01-bcbf-dc61bd1ec212",
				"befba3fd-b6e3-479e-a9ba-d2fc031834d8",
				"c7e2d7db-baff-4a38-8f8e-dc29f1a49c39",
				"20912649-7cee-476d-afa6-b7d17b2253d9",
				"deb5fde0-a457-4a90-b440-960d01b7d500",
				"17c397ff-dffa-4575-929e-7509ac04743d",
				"223b125d-4861-4a2d-9a9b-d965859f09e3",
				"6a735177-63a4-43f1-9d01-a8bdb0910bb5",
				"408e7618-fcbb-4880-b868-f786f7273146",
				"f0bed60f-c96f-4fcf-9ae1-7c260456da24",
				"236d2668-6a73-4681-9dd9-573d84bb982c",
				"ba079f8a-7187-45b5-9956-ee082b9ed99d",
				"0ad968a8-51fc-4547-a844-2d96b297137b"
			]
		},
		{
			"uuid": "c492c179-d139-4b2f-aaff-10c32af1cde5",
			"title": "Doing",
			"tasks": [
				"efee6695-fdd5-4d32-bc5c-6885786af5af",
				"933b4a19-12c3-4b8c-ba3d-45b5662fbadf",
				"6e9f2955-e08c-45c1-acbf-2bdda80b799e",
				"6b171716-74bf-4071-b41d-efe5d58c136a"
			]
		},
		{
			"uuid": "5a719666-6adb-4cab-acd2-30eaa79168da",
			"title": "Done",
			"tasks": [
				"6b6256bb-80da-419e-87fe-97f0e10f1033",
				"57bbe3ae-b0a6-4f08-a031-62ef38cf81c8",
				"8145d6ff-bae1-4b80-a859-14f738577cce",
				"7a1a4092-1142-45f9-8a22-d29ecd9d1c27",
				"0bae085d-669d-4871-a621-c060669709f8",
				"124b5209-a56e-46ce-9bbd-33ac4bca215a",
				"764201a4-d89e-4960-a733-e62b5753713b",
				"c68ca7de-15b7-4ef7-9a39-6346b17d8390",
				"04865abb-c63e-4724-9aed-eefdffd2c712",
				"3bce0f90-ff7c-4948-9bd5-1edb45a95809",
				"1b81778d-d91b-4d14-b893-78dfe5e7d299",
				"86e84ed0-58d6-4319-aca0-8a66e997c9e3",
				"ace2a334-f41e-450e-b6ca-1bd7351d00d3",
				"1b52b03b-29fe-4c45-9f5e-8826428a83d9",
				"42e337e7-85b5-4b87-a033-f27039cc1972",
				"c10e7218-a583-428d-a6cc-3eb1dfbc88ba",
				"48d54ca5-6d46-4aff-a696-7d33c4fb3562",
				"df030f1e-5cc9-4d35-8572-f93f41809a47",
				"8b1209fc-0dd7-4903-8803-c1166dafdbc7",
				"ff2406eb-38dc-43ef-996c-038402108c05",
				"4e8c0a23-084c-4388-b413-99cabda9f1fc",
				"06a50bae-370f-4f00-9a70-9c2de527ddb2",
				"66f2a7d4-61c1-460c-91b5-19e6632b6f04",
				"f63d0a2c-3564-4cf8-8e2a-2fa7b17c1653",
				"5b6267b0-a5df-402e-83a6-2a218a5ee39a",
				"ad5b45f5-4d06-4d45-a8d3-b80e2b685152",
				"57813b5c-872a-400a-ada8-8a8b132ff073",
				"a9e48efe-caa8-4673-96f9-b3d92f5cb21c",
				"bf79540f-6c2b-422d-b756-a70cc502b3eb",
				"864048a4-4069-4b06-a3ba-5a2dd2b1fc9b",
				"b590bdea-b727-41f5-9c24-3bfc20b5d21d",
				"061d365d-c502-44a5-b27a-af83b5e4960c",
				"d4b6d812-5349-4f9f-a36e-8028e78686af",
				"6efcad15-e905-4c43-b046-194860a2a09b",
				"2fe7e62c-3d9c-4c96-8479-82718aec250f",
				"cdc4d921-a45e-4144-9e2a-6025a19b1112",
				"47520bfe-ea36-4858-be69-abd24b5ddde1",
				"f4c37236-9046-4fe8-9229-b93516da8e6c",
				"e553e134-3817-4b50-aaa8-e205a767e9ea",
				"85e04777-9b47-4ed0-94ee-2a3e7fadbb4f",
				"8c295a0f-9a05-4290-b072-34004865de8f",
				"e097320f-0bb4-4d0c-9850-def2b9d4ea18",
				"90ca2a99-392e-459f-b166-bb87eb0dfd5e",
				"d40d0dc3-7560-4e59-95ba-0d0e0dc641dc",
				"106eca20-8516-43e5-8571-3f8c09ecb3e3"
			]
		}
	],
	"tasks": [
		{
			"uuid": "bf79540f-6c2b-422d-b756-a70cc502b3eb",
			"title": "Build AI for Koth",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "7a1a4092-1142-45f9-8a22-d29ecd9d1c27",
			"title": "Animate Rock Throw",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "9704bd39-80af-44c1-8d66-5f5b5c56d103",
			"title": "HUD: Better Score UI",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "c10e7218-a583-428d-a6cc-3eb1dfbc88ba",
			"title": "HUD: Abilities / Cooldowns",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "c7e2d7db-baff-4a38-8f8e-dc29f1a49c39",
			"title": "Koth Win Condition",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "e553e134-3817-4b50-aaa8-e205a767e9ea",
			"title": "Player Spawn Locations in 3d Viewport (like koth) and rotate so not glitching",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "5b6267b0-a5df-402e-83a6-2a218a5ee39a",
			"title": "PowerUp: System",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "66f2a7d4-61c1-460c-91b5-19e6632b6f04",
			"title": "PowerUp: Speed",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "8b1209fc-0dd7-4903-8803-c1166dafdbc7",
			"title": "PowerUpUI",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "ff2406eb-38dc-43ef-996c-038402108c05",
			"title": "PowerUp: Strength",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "864048a4-4069-4b06-a3ba-5a2dd2b1fc9b",
			"title": "MP: Players joining each others games",
			"description": "Multiplayer Initialization",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "061d365d-c502-44a5-b27a-af83b5e4960c",
			"title": "MP: Get animations and rotations syncing",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "a9e48efe-caa8-4673-96f9-b3d92f5cb21c",
			"title": "MP: Get Rocks Syncing",
			"description": "Ah — thank you for clarifying. That’s super helpful.\nYou're absolutely right — if replication were working, you'd see the same rock print logs on both peers, not just the one who threw it.\n\n🧨 What This Means\nIf you're only seeing:\n\nOne log on the host when it throws\n\nOne log on the client when it throws\n\nNothing on the other peer\n\nThen the problem is:\n\n🎯 The rock is not replicating at all across the network.\nIt's only being spawned locally on the peer that throws it.\n\n✅ You Need to Use a MultiplayerSpawner\nRight now you're using:\n\ngdscript\nCopy\nEdit\nvar rock = rock_scene.instantiate()\nrock.set_multiplayer_authority(multiplayer.get_unique_id())\nget_tree().current_scene.add_child(rock)\nThat doesn’t replicate the node unless it's:\n\nAlready present in the scene on both peers, or\n\nSpawned through a MultiplayerSpawner, which tells Godot to replicate it properly\n\n✅ Fix: Use MultiplayerSpawner to Spawn the Rock\n🔧 Step-by-Step:\n1. Add a MultiplayerSpawner to your level scene (e.g., AbstractKothLevel or small_hill.tscn)\nName it something like RockSpawner\n\nMake sure it’s part of the scene before any player throws a rock\n\nAdd it as a child of your level root node (not under the player)\n\n2. Configure the Spawner\nIn the MultiplayerSpawner:\n\nSet the spawn_path to the path of your rock scene (e.g., \"res://entities/objects/combat/rock.tscn\")\n\n(Or in code: rock_spawner.spawn_path = \"res://entities/objects/combat/rock.tscn\")\n\n3. Spawn Rocks Through the Spawner\nIn your ThrowRockAction.gd, change to:\n\ngdscript\nCopy\nEdit\nvar spawner: MultiplayerSpawner = get_tree().get_root().get_node(\"Path/To/RockSpawner\")\n\nspawner.spawn_function = func(peer_id: int) -> Node:\n\tvar rock = rock_scene.instantiate()\n\trock.set_multiplayer_authority(peer_id)\n\t# You can also set initial velocity or rotation here\n\treturn rock\n\nspawner.spawn(multiplayer.get_unique_id())\n🔥 This causes Godot to automatically replicate the rock across peers.\n\n✅ Why This Works\nGodot only replicates nodes that are spawned via a MultiplayerSpawner or already exist in a shared scene.\n\nIf you instantiate something on one peer and just call add_child(), no other peers will see it. ❌\n\n🧪 Final Test\nOnce this is set up, try:\n\nThrowing a rock from the host: it should show up and move on both\n\nThrowing from the client: same\n\nLog should now appear twice for each throw (one per peer)\n\nWould you like help wiring this into your actual level scene (AbstractKothLevel) or want a sample implementation to paste in directly? You're super close to full object replication!\n\n\n\n\n\n\n\n\nYou said:\nOof - so am I going to have to have a multiplayer spawner for every projectile type I create?\n\n\nChatGPT said:\nGreat question — and yeah, it can feel like overkill at first.\n\nBut here's the real deal:\n\n✅ Short Answer:\nYes, you'll need a MultiplayerSpawner if you want a scene (like a projectile) to:\n\nBe spawned at runtime\n\nBe automatically replicated to all peers\n\nHave its authority and synchronization managed by Godot\n\n🔄 But You Don’t Need One Per Projectile Type\nHere’s how you can make it manageable:\n\n✅ Option 1: One Spawner, Many Scene Types\nGodot 4 supports dynamic spawning if you do it like this:\n\ngdscript\nCopy\nEdit\nrock_spawner.spawn_function = func(peer_id: int, spawn_data: Dictionary) -> Node:\n\tvar scene_path = spawn_data.get(\"scene_path\")\n\tvar scene: PackedScene = load(scene_path)\n\tvar rock = scene.instantiate()\n\trock.set_multiplayer_authority(peer_id)\n\t# Optionally: set initial velocity, rotation, etc.\n\treturn rock\nAnd to spawn:\n\ngdscript\nCopy\nEdit\nrock_spawner.spawn(multiplayer.get_unique_id(), { \"scene_path\": \"res://entities/objects/combat/rock.tscn\" })\n✅ This means:\n\nYou can have one generic spawner\n\nUse different scenes via a \"scene_path\" field\n\nAdd fields for velocity, direction, etc.\n\n✅ Option 2: One Spawner Per Gameplay Role\nRather than one per scene, do:\n\nA ProjectileSpawner\n\nAn ItemSpawner\n\nAn EffectSpawner\n\nEach one handles a category and has a switch inside the spawn_function.\n\ngdscript\nCopy\nEdit\nmatch spawn_data.type:\n\t\"rock\":\n\t\tscene = load(\"res://entities/objects/combat/rock.tscn\")\n\t\"bomb\":\n\t\tscene = load(\"res://entities/objects/combat/bomb.tscn\")\n✅ Bottom Line\nStrategy\tUse When\n1 spawner per projectile\tIf your game is small or simple\nOne generic spawner + spawn_data\tBest balance of flexibility and scalability\nOne spawner per gameplay category\tCleanest for larger games\n\nLet me know if you want help refactoring your setup to use one generic spawner with scene path + velocity, and I’ll walk you through it in a few lines of code. It'll future-proof your multiplayer projectiles really nicely.",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "d4b6d812-5349-4f9f-a36e-8028e78686af",
			"title": "MP: Get rings syncing",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "b590bdea-b727-41f5-9c24-3bfc20b5d21d",
			"title": "MP: Get score configured with client connection so its more dynamic",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "c97abd51-cf6d-48f5-8a32-8501546227cf",
			"title": "MP: Handle Disconnects",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "57813b5c-872a-400a-ada8-8a8b132ff073",
			"title": "MP: Score Syncing",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "6efcad15-e905-4c43-b046-194860a2a09b",
			"title": "MP : Rearchitect all levels to work on MP ",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "d40d0dc3-7560-4e59-95ba-0d0e0dc641dc",
			"title": "MP: Get AI Working outside of tutorials",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "f4c37236-9046-4fe8-9229-b93516da8e6c",
			"title": "Architecture: Pluggable respawn rules",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "cdc4d921-a45e-4144-9e2a-6025a19b1112",
			"title": "Architecture: Pluggable game rules",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "2fe7e62c-3d9c-4c96-8479-82718aec250f",
			"title": "Abstract KOTH into a manager, not a level",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "47520bfe-ea36-4858-be69-abd24b5ddde1",
			"title": "Architecture: Generic scoring via game rules",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "8c295a0f-9a05-4290-b072-34004865de8f",
			"title": "Bug: Looks like blocking breaks the player",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "85e04777-9b47-4ed0-94ee-2a3e7fadbb4f",
			"title": "Bug: MP Joining, peer doesn't have brain?",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "ad5b45f5-4d06-4d45-a8d3-b80e2b685152",
			"title": "Bug: MP - Bots are not syncing across peers",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "106eca20-8516-43e5-8571-3f8c09ecb3e3",
			"title": "See if I can make an instance'd Level scene that other level scenes inherit",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "e097320f-0bb4-4d0c-9850-def2b9d4ea18",
			"title": "Bug: Player gets stuck after being knocked down while punching.  Fix with Animation State logic instead of variables",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "90ca2a99-392e-459f-b166-bb87eb0dfd5e",
			"title": "Tutorials are broken, need to make them inherited scenes of level",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "04865abb-c63e-4724-9aed-eefdffd2c712",
			"title": "MP Despawn: Rock errors on peer when rock falls off ledge",
			"description": "Happens on client when rock falls off ledge lol\n\nE 0:00:34:857   on_despawn_receive: Condition \"!pinfo.recv_nodes.has(net_id)\" is true. Returning: ERR_UNAUTHORIZED\n  <C++ Source>  modules/multiplayer/scene_replication_interface.cpp:664 @ on_despawn_receive()\n",
			"category": "f6c1f10a-5ce7-4705-bcbc-58790d54da57",
			"steps": []
		},
		{
			"uuid": "4e8c0a23-084c-4388-b413-99cabda9f1fc",
			"title": "Bug: Score is showing the same player name",
			"description": "Somethings actually a little complicated in the physics process here.  When I fixed it, it breaks on multiplayer peer spawn",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "df030f1e-5cc9-4d35-8572-f93f41809a47",
			"title": "Effects: Death explosion with better respawn timer",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "20912649-7cee-476d-afa6-b7d17b2253d9",
			"title": "Effects: Punch Effect",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "727a2d99-e87f-4939-9105-44fe844ef725",
			"title": "Bug: Sometimes double score on death, particularly on AI",
			"description": "",
			"category": "f6c1f10a-5ce7-4705-bcbc-58790d54da57",
			"steps": []
		},
		{
			"uuid": "cc873263-3ab1-4f9c-bdf6-15ce6a4b33f9",
			"title": "PlayTest: Ryans rock was knocking him down",
			"description": "I can verify this locally if the player has enough speed and is running in the direction they are throwing.  May be fixed with animation and speed modifications during throw, or just rework the rock action\n",
			"category": "f6c1f10a-5ce7-4705-bcbc-58790d54da57",
			"steps": []
		},
		{
			"uuid": "f0bed60f-c96f-4fcf-9ae1-7c260456da24",
			"title": "PlayTest: Roundhouse Kick",
			"description": "",
			"category": "a93a7556-34b9-415c-ae6c-6f87b8475858",
			"steps": []
		},
		{
			"uuid": "70036384-bc35-4b01-bcbf-dc61bd1ec212",
			"title": "HUD: PowerUps",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "48d54ca5-6d46-4aff-a696-7d33c4fb3562",
			"title": "Bug: Multiplayer Peers are not always spawning teh same power up",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "06a50bae-370f-4f00-9a70-9c2de527ddb2",
			"title": "Sprites: Create block and rock sprite for actions",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "befba3fd-b6e3-479e-a9ba-d2fc031834d8",
			"title": "HUD: Add keybinds to action abilities",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "1b81778d-d91b-4d14-b893-78dfe5e7d299",
			"title": "Map Objects (Jump Pad)",
			"description": "",
			"category": "a93a7556-34b9-415c-ae6c-6f87b8475858",
			"steps": []
		},
		{
			"uuid": "408e7618-fcbb-4880-b868-f786f7273146",
			"title": "Player as RigidBody",
			"description": "",
			"category": "a93a7556-34b9-415c-ae6c-6f87b8475858",
			"steps": []
		},
		{
			"uuid": "ba079f8a-7187-45b5-9956-ee082b9ed99d",
			"title": "Review Network Calls and ensure minimal types",
			"description": "",
			"category": "b0d0913a-18f9-4ac3-887f-603e53a50c00",
			"steps": []
		},
		{
			"uuid": "223b125d-4861-4a2d-9a9b-d965859f09e3",
			"title": "Torchy: Fireball and Ring of Fire",
			"description": "",
			"category": "a93a7556-34b9-415c-ae6c-6f87b8475858",
			"steps": []
		},
		{
			"uuid": "f63d0a2c-3564-4cf8-8e2a-2fa7b17c1653",
			"title": "Fast (Lightning?) Character",
			"description": "",
			"category": "a93a7556-34b9-415c-ae6c-6f87b8475858",
			"steps": []
		},
		{
			"uuid": "42e337e7-85b5-4b87-a033-f27039cc1972",
			"title": "Change Hero UI / Clean Respawn",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "6a735177-63a4-43f1-9d01-a8bdb0910bb5",
			"title": "Slushy: Ice Bolt and Cold Spray",
			"description": "",
			"category": "a93a7556-34b9-415c-ae6c-6f87b8475858",
			"steps": []
		},
		{
			"uuid": "236d2668-6a73-4681-9dd9-573d84bb982c",
			"title": "Review TODOs",
			"description": "",
			"category": "b0d0913a-18f9-4ac3-887f-603e53a50c00",
			"steps": []
		},
		{
			"uuid": "ace2a334-f41e-450e-b6ca-1bd7351d00d3",
			"title": "MP Hero: Run Animation not working across clients",
			"description": "",
			"category": "f6c1f10a-5ce7-4705-bcbc-58790d54da57",
			"steps": []
		},
		{
			"uuid": "1b52b03b-29fe-4c45-9f5e-8826428a83d9",
			"title": "MP Bug: Seems like a client sees other peers with 2 meshes",
			"description": "",
			"category": "f6c1f10a-5ce7-4705-bcbc-58790d54da57",
			"steps": []
		},
		{
			"uuid": "86e84ed0-58d6-4319-aca0-8a66e997c9e3",
			"title": "MP: Playing with bots, the server for some reason can't spawn the host",
			"description": "",
			"category": "f6c1f10a-5ce7-4705-bcbc-58790d54da57",
			"steps": []
		},
		{
			"uuid": "3bce0f90-ff7c-4948-9bd5-1edb45a95809",
			"title": "Storm not replicating across peers (and thus causing queue_free crash)",
			"description": "",
			"category": "f6c1f10a-5ce7-4705-bcbc-58790d54da57",
			"steps": []
		},
		{
			"uuid": "0ad968a8-51fc-4547-a844-2d96b297137b",
			"title": "Implement Regions and Export Groups in all scripts",
			"description": "",
			"category": "b0d0913a-18f9-4ac3-887f-603e53a50c00",
			"steps": []
		},
		{
			"uuid": "8145d6ff-bae1-4b80-a859-14f738577cce",
			"title": "Figure out Ability System.  Dmg?  Status modifiers?",
			"description": "",
			"category": "a93a7556-34b9-415c-ae6c-6f87b8475858",
			"steps": []
		},
		{
			"uuid": "57bbe3ae-b0a6-4f08-a031-62ef38cf81c8",
			"title": "Rocky: Harden Ability (4)",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "c68ca7de-15b7-4ef7-9a39-6346b17d8390",
			"title": "Bolty: Gust Ability (4)",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "deb5fde0-a457-4a90-b440-960d01b7d500",
			"title": "Block Ability: Make shield animation",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "764201a4-d89e-4960-a733-e62b5753713b",
			"title": "Gust only pushes Host",
			"description": "",
			"category": "f6c1f10a-5ce7-4705-bcbc-58790d54da57",
			"steps": []
		},
		{
			"uuid": "6e9f2955-e08c-45c1-acbf-2bdda80b799e",
			"title": "Move to entirely server authoritative physics",
			"description": "Authoritative setup (TL;DR)\n\nAuthority/Ownership\n\nSpawn every CharacterBody3D on the server and leave its multiplayer authority = 1 (server).\n\nClients do not run movement/forces; they just send inputs and render/interpolate.\n\n# Character.gd\nextends CharacterBody3D\nclass_name NetCharacter\n\n@onready var sync: MultiplayerSynchronizer = $MultiplayerSynchronizer\n\nfunc _ready() -> void:\n    # Server is the authority for this node\n    set_multiplayer_authority(1)\n    # Interpolate on clients for smoothness\n    physics_interpolation_mode = Node3D.PHYSICS_INTERPOLATION_MODE_ON\n\n\nSynchronizer direction\n\nConfigure your MultiplayerSynchronizer so that only authority replicates (default).\n\nReplicate global_transform, velocity, and any animation state from server → clients.\n\nRemove any client → server transform replication you had.\n\nClients send input snapshots → server\n\nClients never set their transform; they send input. Use unreliable RPC at ~30Hz.\n\n# On the client (runs always), pack current input\n@rpc(\"any_peer\", \"unreliable\", \"call_local\")\nfunc send_input(seq: int, move: Vector2, jump: bool, cast_gust: bool) -> void:\n    # server receives; this stub exists on the server-side script\n    pass\n\n# Client-side sender (example)\nvar _seq := 0\nfunc _physics_process(_dt: float) -> void:\n    var move := Vector2(Input.get_action_strength(\"ui_right\") - Input.get_action_strength(\"ui_left\"),\n                        Input.get_action_strength(\"ui_down\") - Input.get_action_strength(\"ui_up\"))\n    var jump := Input.is_action_just_pressed(\"jump\")\n    var cast := Input.is_action_just_pressed(\"cast_gust\")\n    rpc_id(1, \"send_input\", _seq, move, jump, cast)\n    _seq += 1\n\n\nServer applies inputs, simulates, and replicates\n\nOnly the server’s _physics_process drives characters, applies gust forces, etc.\n\n# On the server (Character.gd attached to each player character)\nvar _pending_input: Array = []    # store last input(s) per peer\nvar _knockback: Vector3 = Vector3.ZERO\n\n@rpc(\"any_peer\", \"unreliable\", \"call_local\")\nfunc send_input(seq: int, move: Vector2, jump: bool, cast_gust: bool) -> void:\n    if not multiplayer.is_server():\n        return\n    # Trust but verify: make sure the sender owns this player slot\n    var sender := multiplayer.get_remote_sender_id()\n    if sender != player_peer_id:    # set when you spawn the character\n        return\n    _pending_input = [seq, move, jump, cast_gust]\n\nfunc _physics_process(dt: float) -> void:\n    if not multiplayer.is_server():\n        return\n\n    # Apply latest input\n    var move: Vector2 = Vector2.ZERO\n    var jump := false\n    var cast := false\n    if _pending_input.size() > 0:\n        move = _pending_input[1]\n        jump = _pending_input[2]\n        cast = _pending_input[3]\n\n    # Your movement (server-authoritative)\n    var wishdir := (global_basis.x * move.x + global_basis.z * move.y).normalized()\n    var speed := 8.0\n    velocity.x = wishdir.x * speed + _knockback.x\n    velocity.z = wishdir.z * speed + _knockback.z\n\n    if jump and is_on_floor():\n        velocity.y = 5.5\n\n    # decay knockback server-side\n    _knockback = _knockback.move_toward(Vector3.ZERO, 20.0 * dt)\n\n    move_and_slide()\n\n    if cast:\n        # Ask the game controller to spawn gust (server-side)\n        Game.gust_request(self)\n\n\nGust spawning, hits, and forces happen on the server\n\nServer spawns the AoE, runs Area3D monitoring and applies knockback to overlapped characters.\n\nThen it replicates only the results (transform/velocity) and triggers VFX RPCs so everyone sees it.\n\n# Server-only gust logic (simplified)\nfunc apply_gust(origin: Vector3, dir: Vector3, force: float, width: float, length: float) -> void:\n    for c in get_tree().get_nodes_in_group(\"players\"):\n        var to := c.global_transform.origin - origin\n        var along := to.project(dir)      # component along gust direction\n        var across := (to - along).length()\n        if along.length() <= length and across <= width:\n            # Knockback: add impulse server-side\n            c.add_knockback(dir * force + Vector3.UP * 1.0)\n\n# In Character.gd\nfunc add_knockback(impulse: Vector3) -> void:\n    if not multiplayer.is_server(): return\n    _knockback += impulse\n    # Optional: tell clients to play hit reaction animation/VFX\n    rpc_unreliable(\"play_gust_hit_vfx\")\n\n\nVFX replication\n\nEither spawn a server-owned VFX node via MultiplayerSpawner, or just broadcast an RPC like rpc_unreliable(\"spawn_gust_vfx\", xform, params) so each client spawns a local-only particle system (cheaper, identical look).\n\nWhy your current setup causes the symptom\n\nMultiplayerSynchronizer with per-client authority means only that peer’s machine runs the authoritative overlaps/areas for their own objects. When a gust happens on a non-host, that overlap/force logic isn’t happening on the machine that actually controls everyone’s transforms, so only the host (who is simulating) ever gets a real effect.\n\nSwitching to server-authoritative movement centralizes:\n\nCollision/overlap (Areas, get_overlapping_bodies())\n\nForces/knockback application\n\nTransform truth (server writes; clients read)\n\n…and your gust will affect every player consistently.\n\nCommon pitfalls (quick checks)\n\nStill sending transforms from clients? Remove/disable that in the Synchronizer. Only the server should replicate transforms.\n\nAuthority vs Owner: The node’s authority should be server (1). You can keep owner as the client for UI things, but physics and replication direction should come from authority.\n\nInterpolation: Turn on physics_interpolation_mode on visual nodes so client motion looks smooth between server updates.\n\nRPC validation: On the server, check multiplayer.get_remote_sender_id() before trusting input.\n\nAreas on clients: Turn off monitoring on clients (or just don’t rely on it). Do hit detection on the server only.\n\nIf you want, paste your current player spawn + synchronizer setup and I’ll mark the exact lines to flip so the server owns movement while you keep client-side prediction (totally optional) for responsiveness.",
			"category": "a93a7556-34b9-415c-ae6c-6f87b8475858",
			"steps": []
		},
		{
			"uuid": "124b5209-a56e-46ce-9bbd-33ac4bca215a",
			"title": "Casting Animation (For Gust at least)",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "0bae085d-669d-4871-a621-c060669709f8",
			"title": "Gust spawn position should be in front of player",
			"description": "",
			"category": "f6c1f10a-5ce7-4705-bcbc-58790d54da57",
			"steps": []
		},
		{
			"uuid": "2e1a6c7f-0abc-4061-93a0-3fd7c2c498ed",
			"title": "Rocky: Harden make immune to knockbacks",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "6b6256bb-80da-419e-87fe-97f0e10f1033",
			"title": "Netfox: Implement Noray Servers",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "efee6695-fdd5-4d32-bc5c-6885786af5af",
			"title": "Netfox: Server Authoritative Players",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		},
		{
			"uuid": "6b171716-74bf-4071-b41d-efe5d58c136a",
			"title": "Netfox: throwable rocks triggering twice (haven't checked other actions)",
			"description": "",
			"category": "f6c1f10a-5ce7-4705-bcbc-58790d54da57",
			"steps": []
		},
		{
			"uuid": "17c397ff-dffa-4575-929e-7509ac04743d",
			"title": "Host my own Noray",
			"description": "https://www.youtube.com/watch?v=wZ4aHVfie2Q&ab_channel=curtjs",
			"category": "a93a7556-34b9-415c-ae6c-6f87b8475858",
			"steps": []
		},
		{
			"uuid": "933b4a19-12c3-4b8c-ba3d-45b5662fbadf",
			"title": "Netfox: Change scene only on client connect, maybe have some loading screen in between",
			"description": "",
			"category": "e30bcdd5-0c2d-466e-ba39-49d85d5d0b57",
			"steps": []
		}
	],
	"layout": {
		"columns": [
			[
				"63c1f58a-5e38-4a72-98d8-44ab4fae8431"
			],
			[
				"c492c179-d139-4b2f-aaff-10c32af1cde5"
			],
			[
				"5a719666-6adb-4cab-acd2-30eaa79168da"
			]
		]
	}
}